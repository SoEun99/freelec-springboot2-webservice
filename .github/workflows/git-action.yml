# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-2
      APP_NAME: 1.8-1.0-SNAPSHOT
      DEPLOY_GROUP: freelec-springboot2-webservice-group
      BUCKET_NAME: freelec-springboot2-test-test-test
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      # Sample workflow to access AWS resources when workflow is tied to branch
    - name: Git clone the repository
      uses: actions/checkout@v5

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: 1.8-1.0-SNAPSHOT
        path: build/libs


# GitHub Artifacts -> 러너로 다운로드
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: 1.8-1.0-SNAPSHOT
        path: dist/
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'ap-northeast-2' }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
      with:
        role-to-assume: arn:aws:iam::862344888488:role/GitHubActionsS3Uploader
        aws-region: ap-southeast-2

#make Zip bundle
    - name: Zip bundle
      run: |
          zip -r bundle.zip appspec.yml scripts app

# S3 업로드
    - name: Upload artifact to S3
      run: |
        set -e
        FILE=$(ls $PWD/*.zip | tail -n1)
        echo "Uploading $FILE to s3://$BUCKET_NAME/"
        echo "파일 : $FILE"
        echo "경로 : $PWD"
        aws s3 cp "$FILE" "s3://$BUCKET_NAME/$(basename "$FILE")" \
          --content-type application/java-archive \
          --cache-control "no-cache"

# CodeDeploy 배포
    - name: Create CodeDeploy deployment
      run: |
        aws deploy create-deployment \
          --application-name "freelec-springboot2-webservice-test" \
          --deployment-group-name "freelec-springboot2-webservice-group" \
          --revision "s3Location={bucket=freelec-springboot2-test-test-test,key=bundles/bundle-${GITHUB_SHA}.zip,bundleType=zip}" \
          --file-exists-behavior OVERWRITE


  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 24
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0


